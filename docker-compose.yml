version: '3'

services:

  traefik:
    image: traefik:v2.2
    container_name: traefik
    command:
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --api=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=gcloud
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.letsencrypt.acme.email=abd6982@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    environment:
      - GCE_PROJECT=cumulo
      - GCE_SERVICE_ACCOUNT_FILE=/etc/traefik/gce_service_account.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.rule=Host(`traefik.haven.cumulo.dev`)
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.middlewares=basic-auth
      - traefik.http.middlewares.basic-auth.basicauth.users=abhishek:$$2y$$10$$op5eqXNINSeXfpDh1ghnSuqjdNXEn9MGvCkRsKZdNjZPbB4MfkZlO
      - traefik.http.routers.traefik-http-catchall.entrypoints=http
      - traefik.http.routers.traefik-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.traefik-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.traefik.service=api@internal
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 1000:1000
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ./jellyfin/media:/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.entrypoints=https
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.haven.cumulo.dev`)
      - traefik.http.routers.jellyfin.tls=true
      - traefik.http.routers.jellyfin.tls.certresolver=letsencrypt
      - traefik.http.routers.jellyfin-http-catchall.entrypoints=http
      - traefik.http.routers.jellyfin-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.jellyfin-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - UMASK_SET=022
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent/config:/config
      - ./qbittorrent/downloads:/downloads
    ports:
      - 6881:6881
      - 6881:6881/udp
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.entrypoints=https
      - traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.haven.cumulo.dev`)
      - traefik.http.routers.qbittorrent.tls=true
      - traefik.http.routers.qbittorrent.tls.certresolver=letsencrypt
      - traefik.http.routers.qbittorrent-http-catchall.entrypoints=http
      - traefik.http.routers.qbittorrent-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.qbittorrent-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080
    restart: unless-stopped

  nextcloud_db:
    image: mariadb
    container_name: nextcloud_db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ./nextcloud/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=nextcloud
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    restart: unless-stopped

  nextcloud_app:
    image: nextcloud
    container_name: nextcloud_app
    links:
      - nextcloud_db
    volumes:
      - ./nextcloud/app:/var/www/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud.entrypoints=https
      - traefik.http.routers.nextcloud.rule=Host(`nextcloud.haven.cumulo.dev`)
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=letsencrypt
      - traefik.http.routers.nextcloud-http-catchall.entrypoints=http
      - traefik.http.routers.nextcloud-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.nextcloud-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
    restart: unless-stopped

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ./heimdall/config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.heimdall.entrypoints=https
      - traefik.http.routers.heimdall.rule=Host(`haven.cumulo.dev`)
      - traefik.http.routers.heimdall.tls=true
      - traefik.http.routers.heimdall.tls.certresolver=letsencrypt
      - traefik.http.routers.heimdall-http-catchall.entrypoints=http
      - traefik.http.routers.heimdall-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.heimdall-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.heimdall.loadbalancer.server.port=80
    restart: unless-stopped

  simple-torrent:
    image: boypt/cloud-torrent
    container_name: simpletorrent
    environment:
      - AUTH=abhishek:password
    volumes:
      - ./simpletorrent/downloads:/downloads
      - ./simpletorrent/torrents:/torrents
    labels:
      - traefik.enable=true
      - traefik.http.routers.simpletorrent.entrypoints=https
      - traefik.http.routers.simpletorrent.rule=Host(`simpletorrent.haven.cumulo.dev`)
      - traefik.http.routers.simpletorrent.tls=true
      - traefik.http.routers.simpletorrent.tls.certresolver=letsencrypt
      - traefik.http.routers.simpletorrent-http-catchall.entrypoints=http
      - traefik.http.routers.simpletorrent-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.simpletorrent-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.simpletorrent.loadbalancer.server.port=3000
    restart: unless-stopped

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    volumes:
      - ./:/srv
      - ./filebrowser/database.db:/database.db
    labels:
      - traefik.enable=true
      - traefik.http.routers.filebrowser.entrypoints=https
      - traefik.http.routers.filebrowser.rule=Host(`filebrowser.haven.cumulo.dev`)
      - traefik.http.routers.filebrowser.tls=true
      - traefik.http.routers.filebrowser.tls.certresolver=letsencrypt
      - traefik.http.routers.filebrowser-http-catchall.entrypoints=http
      - traefik.http.routers.filebrowser-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.filebrowser-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.filebrowser.loadbalancer.server.port=80
    restart: unless-stopped
