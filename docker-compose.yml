version: '3'

services:

  traefik:
    image: traefik:v2.2
    container_name: traefik
    command:
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --api=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=gcloud
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.letsencrypt.acme.email=abd6982@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    environment:
      - GCE_PROJECT=cumulo
      - GCE_SERVICE_ACCOUNT_FILE=/etc/traefik/gce_service_account.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.rule=Host(`traefik.haven.cumulo.dev`)
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.middlewares=basic-auth
      - traefik.http.middlewares.basic-auth.basicauth.users=abhishek:$$2y$$10$$op5eqXNINSeXfpDh1ghnSuqjdNXEn9MGvCkRsKZdNjZPbB4MfkZlO
      - traefik.http.routers.traefik-http-catchall.entrypoints=http
      - traefik.http.routers.traefik-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.traefik-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.traefik.service=api@internal
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 1000:1000
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ./jellyfin/media:/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.entrypoints=https
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.haven.cumulo.dev`)
      - traefik.http.routers.jellyfin.tls=true
      - traefik.http.routers.jellyfin.tls.certresolver=letsencrypt
      - traefik.http.routers.jellyfin-http-catchall.entrypoints=http
      - traefik.http.routers.jellyfin-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.jellyfin-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - UMASK_SET=022
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent/config:/config
      - ./qbittorrent/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.entrypoints=https
      - traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.haven.cumulo.dev`)
      - traefik.http.routers.qbittorrent.tls=true
      - traefik.http.routers.qbittorrent.tls.certresolver=letsencrypt
      - traefik.http.routers.qbittorrent-http-catchall.entrypoints=http
      - traefik.http.routers.qbittorrent-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.qbittorrent-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080
    restart: unless-stopped

  nextcloud_db:
    image: mariadb
    container_name: nextcloud_db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ./nextcloud/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=nextcloud
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    restart: unless-stopped

  nextcloud_app:
    image: nextcloud
    container_name: nextcloud_app
    links:
      - nextcloud_db
    volumes:
      - ./nextcloud/app:/var/www/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud.entrypoints=https
      - traefik.http.routers.nextcloud.rule=Host(`nextcloud.haven.cumulo.dev`)
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=letsencrypt
      - traefik.http.routers.nextcloud-http-catchall.entrypoints=http
      - traefik.http.routers.nextcloud-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.nextcloud-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
    restart: unless-stopped

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ./heimdall/config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.heimdall.entrypoints=https
      - traefik.http.routers.heimdall.rule=Host(`haven.cumulo.dev`)
      - traefik.http.routers.heimdall.tls=true
      - traefik.http.routers.heimdall.tls.certresolver=letsencrypt
      - traefik.http.routers.heimdall-http-catchall.entrypoints=http
      - traefik.http.routers.heimdall-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.heimdall-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.heimdall.loadbalancer.server.port=80
    restart: unless-stopped

  filebrowser:
    image: filebrowser/filebrowser:debian
    container_name: filebrowser
    volumes:
      - ./:/srv
      - ./filebrowser/database.db:/database.db
    labels:
      - traefik.enable=true
      - traefik.http.routers.filebrowser.entrypoints=https
      - traefik.http.routers.filebrowser.rule=Host(`filebrowser.haven.cumulo.dev`)
      - traefik.http.routers.filebrowser.tls=true
      - traefik.http.routers.filebrowser.tls.certresolver=letsencrypt
      - traefik.http.routers.filebrowser-http-catchall.entrypoints=http
      - traefik.http.routers.filebrowser-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.filebrowser-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.filebrowser.loadbalancer.server.port=80
    restart: unless-stopped

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: netdata.haven.cumulo.dev
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.netdata.entrypoints=https
      - traefik.http.routers.netdata.rule=Host(`netdata.haven.cumulo.dev`)
      - traefik.http.routers.netdata.tls=true
      - traefik.http.routers.netdata.tls.certresolver=letsencrypt
      - traefik.http.routers.netdata-http-catchall.entrypoints=http
      - traefik.http.routers.netdata-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.netdata-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.netdata.loadbalancer.server.port=19999
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - UMASK_SET=022
    volumes:
      - ./sonarr/config:/config
      - ./jellyfin/media/TVSeries:/tv
      - ./jellyfin/media/Anime:/anime
      - ./qbittorrent/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=https
      - traefik.http.routers.sonarr.rule=Host(`sonarr.haven.cumulo.dev`)
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.tls.certresolver=letsencrypt
      - traefik.http.routers.sonarr-http-catchall.entrypoints=http
      - traefik.http.routers.sonarr-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.sonarr-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - UMASK_SET=022
    volumes:
      - ./radarr/config:/config
      - ./jellyfin/media/Movies:/movies
      - ./qbittorrent/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=https
      - traefik.http.routers.radarr.rule=Host(`radarr.haven.cumulo.dev`)
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.tls.certresolver=letsencrypt
      - traefik.http.routers.radarr-http-catchall.entrypoints=http
      - traefik.http.routers.radarr-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.radarr-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.radarr.loadbalancer.server.port=7878
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - AUTO_UPDATE=true
    volumes:
      - ./jackett/config:/config
      - ./jackett/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.jackett.entrypoints=https
      - traefik.http.routers.jackett.rule=Host(`jackett.haven.cumulo.dev`)
      - traefik.http.routers.jackett.tls=true
      - traefik.http.routers.jackett.tls.certresolver=letsencrypt
      - traefik.http.routers.jackett-http-catchall.entrypoints=http
      - traefik.http.routers.jackett-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.jackett-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.jackett.loadbalancer.server.port=9117
    restart: unless-stopped

  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.entrypoints=https
      - traefik.http.routers.portainer.rule=Host(`portainer.haven.cumulo.dev`)
      - traefik.http.routers.portainer.tls=true
      - traefik.http.routers.portainer.tls.certresolver=letsencrypt
      - traefik.http.routers.portainer-http-catchall.entrypoints=http
      - traefik.http.routers.portainer-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.portainer-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    restart: unless-stopped

  pyload:
    image: linuxserver/pyload
    container_name: pyload
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ./pyload/config:/config
      - ./pyload/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.pyload.entrypoints=https
      - traefik.http.routers.pyload.rule=Host(`pyload.haven.cumulo.dev`)
      - traefik.http.routers.pyload.tls=true
      - traefik.http.routers.pyload.tls.certresolver=letsencrypt
      - traefik.http.routers.pyload-http-catchall.entrypoints=http
      - traefik.http.routers.pyload-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.pyload-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.pyload.loadbalancer.server.port=8000
    restart: unless-stopped

  magnetissimo_db:
    image: postgres
    container_name: magnetissimo_db
    environment:
      POSTGRES_USER: torrent
      POSTGRES_PASSWORD: torrent
    volumes:
      - ./magnetissimo/db:/var/lib/postgresql/data:rw
    restart: unless-stopped

  magnetissimo_app:
    image: caskd/magnetissimo-docker:latest
    container_name: magnetissimo_app
    environment:
      MIX_ENV: prod
      DB_HOST: magnetissimo_db
      DB_PORT: 5432
      MAG_DATABASE: torrent
      MAG_USERNAME: torrent
      MAG_PASSWORD: torrent
    labels:
      - traefik.enable=true
      - traefik.http.routers.magnetissimo.entrypoints=https
      - traefik.http.routers.magnetissimo.rule=Host(`magnetissimo.haven.cumulo.dev`)
      - traefik.http.routers.magnetissimo.tls=true
      - traefik.http.routers.magnetissimo.tls.certresolver=letsencrypt
      - traefik.http.routers.magnetissimo-http-catchall.entrypoints=http
      - traefik.http.routers.magnetissimo-http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.magnetissimo-http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.services.magnetissimo.loadbalancer.server.port=4000
    restart: unless-stopped

volumes:
  netdatalib:
  netdatacache:
  portainer_data:
